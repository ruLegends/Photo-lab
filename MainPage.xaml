<Page x:Name ="page"
    x:Class="Album.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Album.ViewModel"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    mc:Ignorable="d"
    xmlns:animations="using:Microsoft.Toolkit.Uwp.UI.Animations"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
    SizeChanged="{x:Bind DetermineItemSize}">

    <Page.Resources>
        <!-- Margins for grid items -->
        <x:Int32 x:Key="LargeItemMarginValue">8</x:Int32>
        <Thickness x:Key="LargeItemMargin">8</Thickness>
        <x:Int32 x:Key="SmallItemMarginValue">0</x:Int32>
        <Thickness x:Key="SmallItemMargin">0</Thickness>
        <x:Int32 x:Key="DefaultWindowSidePaddingValue">16</x:Int32>
        
        <DataTemplate x:Key="ImageGridView_SmallItemTemplate" x:DataType="local:ImageFileInfo">
            <Grid
                Height="{Binding ItemSize, ElementName=page}"
                Width="{Binding ItemSize, ElementName=page}">
                <Image x:Name="ItemImage"
                       Source="Assets/StoreLogo.png"
                       Stretch="UniformToFill">
                    <ToolTipService.ToolTip>
                        <ToolTip x:Name="tooltip">
                            <StackPanel Orientation="Vertical">
                                <TextBlock Text="{x:Bind ImageTitle, Mode=OneWay}"
                                           HorizontalAlignment="Center"
                                           Style="{StaticResource SubtitleTextBlockStyle}" />
                                <StackPanel Orientation="Horizontal"
                                            HorizontalAlignment="Center">
                                    <TextBlock Text="{x:Bind ImageFileType}"
                                               HorizontalAlignment="Center"
                                               Style="{StaticResource CaptionTextBlockStyle}" />
                                    <TextBlock Text="{x:Bind ImageDimensions}"
                                               HorizontalAlignment="Center"
                                               Style="{StaticResource CaptionTextBlockStyle}"
                                               Margin="8,0,0,0" />
                                </StackPanel>
                            </StackPanel>
                        </ToolTip>
                    </ToolTipService.ToolTip>
                </Image>
            </Grid>
        </DataTemplate>

        <Flyout x:Key="zoomFlyout">
            <StackPanel>
                <Slider x:Name="ZoomSlider"
                        Minimum="180"
                        Maximum="540"
                        Value="270"
                        Margin="0,5,0,0"
                        TickFrequency="90"
                        SnapsTo="Ticks"
                        ValueChanged="{x:Bind DetermineItemSize}"
                        IsEnabled="{x:Bind FitScreenToggle.IsOn, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        Header=" Размер элемента сетки " />
                <!--ValueChanged="{x:Bind DetermineItemSize}"-->
                <ToggleSwitch x:Name="FitScreenToggle"
                              Header="По размеру экрана"
                              Toggled="{x:Bind DetermineItemSize}"
                              ToolTipService.ToolTip="Измените размер изображений, чтобы использовать доступное пространство." />
            </StackPanel>
            <!--Toggled="{x:Bind DetermineItemSize}"-->
        </Flyout>

        <DataTemplate x:Key="ImageGridView_DefaultItemTemplate">
            <Grid Height="{Binding ItemSize, ElementName=page}" Width="{Binding ItemSize, ElementName=page}" Margin="8">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Image x:Name="ItemImage" Source="Assets/StoreLogo.png" Stretch="Uniform" />
                <StackPanel Orientation="Vertical" Grid.Row="1">
                    <TextBlock Text="ImageTitle" HorizontalAlignment="Center" Style="{StaticResource SubtitleTextBlockStyle}" />
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                        <TextBlock Text="ImageFileType" HorizontalAlignment="Center" Style="{StaticResource CaptionTextBlockStyle}" />
                        <TextBlock Text="ImageDimensions" HorizontalAlignment="Center" Style="{StaticResource CaptionTextBlockStyle}" Margin="8,0,0,0" />
                    </StackPanel>
                    <muxc:RatingControl IsReadOnly="True"/>
                </StackPanel>
            </Grid>
        </DataTemplate>
        <Style x:Key="ImageGridView_DefaultItemContainerStyle" TargetType="GridViewItem">
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
            <Setter Property="Background" Value="Gray"/>
            <Setter Property="Foreground" Value="{ThemeResource GridViewItemForeground}"/>
            <Setter Property="TabNavigation" Value="Local"/>
            <Setter Property="IsHoldingEnabled" Value="True"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Margin" Value="8"/>
            <Setter Property="MinWidth" Value="{ThemeResource GridViewItemMinWidth}"/>
            <Setter Property="MinHeight" Value="{ThemeResource GridViewItemMinHeight}"/>
            <Setter Property="AllowDrop" Value="False"/>
            <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}"/>
            <Setter Property="FocusVisualMargin" Value="-2"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="GridViewItem">
                        <ListViewItemPresenter x:Name="Root" CheckBrush="{ThemeResource GridViewItemCheckBrush}" ContentMargin="{TemplateBinding Padding}" CheckBoxBrush="{ThemeResource GridViewItemCheckBoxBrush}" ContentTransitions="{TemplateBinding ContentTransitions}" CheckMode="{ThemeResource GridViewItemCheckMode}" DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}" DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}" DragBackground="{ThemeResource GridViewItemDragBackground}" DragForeground="{ThemeResource GridViewItemDragForeground}" FocusBorderBrush="{ThemeResource GridViewItemFocusBorderBrush}" FocusVisualMargin="{TemplateBinding FocusVisualMargin}" FocusSecondaryBorderBrush="{ThemeResource GridViewItemFocusSecondaryBorderBrush}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Control.IsTemplateFocusTarget="True" PressedBackground="{ThemeResource GridViewItemBackgroundPressed}" PlaceholderBackground="{ThemeResource GridViewItemPlaceholderBackground}" PointerOverForeground="{ThemeResource GridViewItemForegroundPointerOver}" PointerOverBackground="{ThemeResource GridViewItemBackgroundPointerOver}" RevealBorderThickness="{ThemeResource GridViewItemRevealBorderThemeThickness}" ReorderHintOffset="{ThemeResource GridViewItemReorderHintThemeOffset}" RevealBorderBrush="{ThemeResource GridViewItemRevealBorderBrush}" RevealBackground="{ThemeResource GridViewItemRevealBackground}" SelectedForeground="{ThemeResource GridViewItemForegroundSelected}" SelectionCheckMarkVisualEnabled="{ThemeResource GridViewItemSelectionCheckMarkVisualEnabled}" SelectedBackground="{ThemeResource GridViewItemBackgroundSelected}" SelectedPressedBackground="{ThemeResource GridViewItemBackgroundSelectedPressed}" SelectedPointerOverBackground="{ThemeResource GridViewItemBackgroundSelectedPointerOver}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="Selected"/>
                                    <VisualState x:Name="PointerOver">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)" Value="PointerOver"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="PointerOverSelected">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)" Value="PointerOver"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="PointerOverPressed">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)" Value="Pressed"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)" Value="Pressed"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="PressedSelected">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)" Value="Pressed"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="DisabledStates">
                                    <VisualState x:Name="Enabled"/>
                                    <VisualState x:Name="Disabled">
                                        <VisualState.Setters>
                                            <Setter Target="Root.RevealBorderThickness" Value="0"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup>
                                    <!-- Large window VisualState -->
                                    <VisualState x:Name="LargeWindow" >
                                        <!-- Large window trigger -->
                                        <VisualState.StateTriggers>
                                            <AdaptiveTrigger MinWindowWidth="{StaticResource LargeWindowBreakpoint}" />
                                        </VisualState.StateTriggers>
                                    </VisualState>
                                    <!-- Medium window VisualState -->
                                    <VisualState x:Name="MediumWindow" >
                                        <!-- Medium window trigger -->
                                        <VisualState.StateTriggers>
                                            <AdaptiveTrigger MinWindowWidth="{StaticResource MediumWindowBreakpoint}" />
                                        </VisualState.StateTriggers>
                                    </VisualState>
                                    <!-- Small window VisualState -->
                                    <VisualState x:Name="SmallWindow" >
                                        <!-- Small window trigger -->
                                        <VisualState.StateTriggers>
                                            <AdaptiveTrigger MinWindowWidth="{StaticResource MinWindowBreakpoint}" />
                                        </VisualState.StateTriggers>
                                        <VisualState.Setters>
                                            <Setter Target="ImageGridView.ItemTemplate" Value="{StaticResource ImageGridView_SmallItemTemplate}"/>
                                            <Setter Target="ZoomSlider.Minimum" Value="80" />
                                            <Setter Target="ZoomSlider.Maximum" Value="180" />
                                            <Setter Target="ZoomSlider.TickFrequency" Value="20" />
                                            <Setter Target="ZoomSlider.Value" Value="100" />
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </ListViewItemPresenter>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ItemsPanelTemplate x:Key="ImageGridView_ItemsPanelTemplate">
            <ItemsWrapGrid Orientation="Horizontal"
                           HorizontalAlignment="Center"/>
        </ItemsPanelTemplate>
    </Page.Resources>
    
    <RelativePanel>
        <TextBlock x:Name="TitleTextBlock" HorizontalAlignment="Left"
         Margin="24,24,0, 0"
         Text="Коллекция"
         VerticalAlignment="Top"
         Style="{ThemeResource TitleTextBlockStyle}"/>
        <CommandBar x:Name="MainCommandBar"
                    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
                    RelativePanel.AlignRightWithPanel="True"
                    OverflowButtonVisibility="Collapsed"
                    DefaultLabelPosition="Right">
            <AppBarButton Icon="Zoom"
                          Label="Zoom"
                          Flyout="{StaticResource zoomFlyout}" />
            
        </CommandBar>
        
        <GridView ItemsPanel="{StaticResource ImageGridView_ItemsPanelTemplate}" ItemContainerStyle="{StaticResource ImageGridView_DefaultItemContainerStyle}" x:Name="ImageGridView"
         Margin="0,0,0,8"
         RelativePanel.AlignLeftWithPanel="True"
         RelativePanel.AlignRightWithPanel="True"
         RelativePanel.Below="TitleTextBlock"
         ItemTemplate="{StaticResource ImageGridView_DefaultItemTemplate}"
         ContainerContentChanging="ImageGridView_ContainerContentChanging"
         animations:ReorderGridAnimation.Duration="400"/>
    </RelativePanel>
</Page>
